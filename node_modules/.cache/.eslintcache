[{"/Users/dhirajudhani/Projects/neogcamp/listapp/src/index.js":"1","/Users/dhirajudhani/Projects/neogcamp/listapp/src/App.js":"2","/Users/dhirajudhani/Projects/neogcamp/listapp/src/components/Post.js":"3","/Users/dhirajudhani/Projects/neogcamp/listapp/src/components/Pagination.js":"4"},{"size":542,"mtime":1675244250808,"results":"5","hashOfConfig":"6"},{"size":2230,"mtime":1675261107355,"results":"7","hashOfConfig":"6"},{"size":1659,"mtime":1675314063079,"results":"8","hashOfConfig":"6"},{"size":611,"mtime":1675257864310,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1w698r",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"13"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"/Users/dhirajudhani/Projects/neogcamp/listapp/src/index.js",[],[],[],"/Users/dhirajudhani/Projects/neogcamp/listapp/src/App.js",["24","25"],[],"import React,{ useState,useEffect} from 'react'\nimport axios from 'axios';\nimport Post from './components/Post';\nimport Pagination from './components/Pagination';\n\n// import contactList from './components/contact-list/addContact/contactList'\n\nconst App = () => {\n  const[posts,setPosts] = useState([]);\n  let [loading,setLoading] = useState(false);\n  const [currentPage,setCurrentPage] =  useState(1);\n  const [postsPerPage] = useState(3);\n\n  useEffect(()=> {\n    const fetchPosts = async ()=>{\n      setLoading = true;\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n      setPosts(res.data);\n      setLoading=false;\n    }\n\n    fetchPosts();\n  },[]);\n  // Getting current \n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost,indexOfLastPost);\n\n  // Change Page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n  \n  return (\n   <> \n   <h1 className='text-center'>List App</h1>\n    {/* <section className='contact-list'>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card\">\n              <div className=\"card-body d-flex p-3 align-item-center\">\n                <div className=\"col-md-2\">\n                  <p>Hellomet</p>\n                </div>\n                <div className=\"col-md-3\">\n                  <h4>Name</h4>\n                  <span></span>\n                </div>\n                <div className=\"col-md-3\">\n                   <h4>CITY</h4>\n                   <span>Mumbai</span>\n                </div>\n                <div className=\"col-md-2\">\n                  <h4>STATE</h4>\n                  <span>Maharashtra</span>\n                </div>\n                <div className=\"col-md-3 \">\n                  <button className='btn btn-success' >View details</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n     */}\n    \n   <Post posts={currentPosts} loading={loading}  />\n   <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\n   </>\n  )\n}\n\nexport default App","/Users/dhirajudhani/Projects/neogcamp/listapp/src/components/Post.js",[],[],"/Users/dhirajudhani/Projects/neogcamp/listapp/src/components/Pagination.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":10,"column":16,"nodeType":"28","messageId":"29","endLine":10,"endColumn":26},{"ruleId":"30","severity":1,"message":"31","line":16,"column":20,"nodeType":"32","endLine":16,"endColumn":24},"no-unused-vars","'setLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'setLoading' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal"]